#Rosalind

# Exercise DNA 1
# Given: A DNA string s of length at most 1000 nt.
# Return: Four integers (separated by spaces) counting the respective number of times that the symbols 'A', 'C', 'G', and 'T' occur in s

dna = "GTGTTACGAAGGGATCGCTTCTTGGACCACTTTTTTGACACGGGCACCCCGGCCCGCAATTAGACCCTCTGAAGACTCAAAGCGTATTAAGAGAAACGCTGACTAGCTACGTGGGTTTGTCTTGCGAAGCTTGATAATCGACGGGGAAAGCAGCTACGATAACAGGATTCTACACTAGCCAAACAGGCTCGCAAGGTATGCACCGGACAAATATTGACACAGGGGAGTGCCCCGGATTCTAACCCGACATTCGTGAGTCCATTGCCATATGAATTATTCCGATGTACACATCTTGAATTAACTGGTGTCGCGACTGAAAGCCTGGGATTCCAATGAGGTCGTCTACCATCTACGGGGGTGAACGGCCGTCGGACCGCCGTAGTGATACTTGCGTTGGCGCAAGCCCACCAGTTTTATTAAATCGTACCCACGCTTCCCTTATTAGAGCGATATGGTGCTTACGTAGTCCAATACAGTTGTCACTGCCTCTACCCCGGATAAGTGTCTAGTTGCGGTCCGCTTGATACCTTTTTGTGATCGCCAAAAATCCTGTAGCATGTAGTTCGTGCGAACCTTCCCTGGCAACGTAAGGAACCTTTAGCGCACATGCGCTCGCCCCGTTGCAGTAGCAATCCTAGTCATTTGGCAAGCACTTGACCAGTATAGATCATTTTATCACGGCTGTAAAATGGTTTGCACCCCCCGAAAGCTTCCCTGTATTCTCCTTATTCCGTGAAAAGCTAGCATCCCGAGTGGACCCGGCTGACGGGTCCTTATATCCGTGTCACAATATTTGACAGTGGGTACCTAGGCTCTTTACAACAGTTAATGTTAGCCACGACCAATCGTAATAGTGGTCGCGGTAGGAAAGACTACTGGACAGTTAAACGGGACACAGTGTCTCCTTAACTTCTGAAAGTTAAATTGTAATGCCTGGAAGGAATGGGTCACCAAGTTGCGTATAG"
A = dna.count("A")
G = dna.count("G")
T = dna.count("T")
C = dna.count("C")
print(A, C, G, T)


# Exercise Transcribing DNA into RNA
#Given: A DNA string t having length at most 1000 nt.
#Return: The transcribed RNA string of t
# goal -> chnage all TÂ´s to a U

#first attempt
# loop over data
# if T transcribe to U
# if not continue

#DNA = ["GATGGAACTTGACTACGTAAATT"]
#for letter in DNA:
#    if letter == "T":
#        #transcribe
#    else #continue
#print(letter)

# second attempt
dna = "GATTCAGGCGAGACATCCGCGCCTAGCTGCCAGGCCCGTCTTAGTTCTTTAAAGTTGTCGACAAACGGCATTTCTACTTTGTCAACTGAAACTTAGAGGCCCAAATTTGGAATAGTTACCAAACGGAGGCGAGAAGGCGTGCATTCCGCATAATAGTCACTGCCTGCTGTGGTACGTTTCACTGCAGATACGCCACGAACTGCCTGCCTTTTACCTCCACCAGGCCAGCCCCAGGTGAGACGCTAAGAAGTCACAGTAGGACTACCTGACGCGTACGCTACGCACCCTGACGCCTCAAAGGCGCATTGTAAAATGAACGATCAGAACTGGTAAATGCGTCGCTACTGCAACTTAATCTAGCCTTATTGATTTAGGGTTTGTGTGAGTATGAAGCGCCCGTATCTTCCGGATAGCTGTGGCGGATCTTACCTTCCGCGACATCAGTTACGGCCGGAGACAGGTCCGTGCGGTCGATGGATGGCCCGGTGGATCACTTCAAAGTGAAGATTGCCAAGAACCTCTGGACTGTTCGCAGCGAAGCCAGACAGCTACGGAAACTGGCGGACTTGAAATAGCCATCTGGAGGCATATACCTATGGAACGAAGGCTCGAAACTATCCAAAAACAAGGTTCCGATCGGTGCTAAGCGGATGGCTCTACACTGGTATTTCTGTGGTCGGTCAACGCCCTGTTCGCGGGATAGCCATGGTTATCTCAGCAATCCATCCAGGTGGAATATTTTGAAAACTCGTGCGTAACACGTTGACCCTTATGCCTTGAAAGGGTCATTGCCTAGAAGAAGTGTAATTCCAGTCACGCTCGTCGCTTATCAGGTTGCCTTGGTCGACTGGGGGGAAGTCACCCAAATTTAAGGTTGTCCGTAATTAGCGGCCACCCCGC"
rna = dna.replace("T", "U")
print(rna)

print("===================================")

# Exercis Complementing a Strand of DNA
# Given: A DNA string s of length at most 1000 bp.
# Return: The reverse complement sc of s


dna = "CAACCTATACTTGAACCCCTATGAGTCTGCAAACCTTGATTGGTGATACATAGGGCGCATCGTCTTATGGGATCTGGTGAGTTGCCATTCCGACTGTATTTGTTAAGCTATCGGCAACTTGTGTCTCAAGACATGAGAAACATGGTTATCCTGATGACGACAAAACTGGGTAGACCATCGTAACCACGAGATAGGCCTGGCTAATCACGGCGGGAAAGGTTTAGTAGGGGGCAGTTAACGCTGTGGGGCACACCAAGATTGGTACCCCACAATGCGAATCCTGGCCACATGTAGTTGTCTGCAAATTACGACGAACTTGTTCCATAGGAGTTCGTCATTAAAATGTTGCATTGCCTGTGCTAACGGTTAAGGGTGCCAGGATTCCGAATTTGCCTCAAGAAGTTATCCTCGGGTACCCGACTATGGCCTGTAATAAAAGGGCTGAATGACGATTAGGGCCGCACAGGTGCAGTAGAGGTGGGGTCATACCCACGCAAAACCCCGGTCCAGAATCAAGAGTGCATCGAACCAAGGCCAGTAGCTTCAGCGCCCTCATTTCGATCCCTTAAACGTTCCTCTTACAGACAAGCGCTGGCGTAGGGAATGAAATATGCCGTCGAGTGTCCTAACGCTTGGACTGCGTTTTCTTGACCAGTGCGTTGCAGATCGGCACCTCTTTCTGTATAGTGTTTGGACCTAAGGAATTGTAGTAACGTGGCGGGAAGTGAAGATAGCTCTCCTCTTTACGCGACCCTACAGTAGTCGGAGAAGCGGTTGGTGTATACTTCGCGCGGTCCGATTCCGAGCGAGTAGACGGGCGTGAGTTATGAATATGGTTCACAGTCAGGGCAATAGTGCGCAGGTTACCTGTCACTCAAGGTTTGTGCTAGGTGCAGCAATATAAACCCACAAGTTCGTCTTGGTCTTAGATGCACGTGTATTTTAGAATCG"
new_dna = ""
for x in dna:
    if x == "A":
        new_dna += "T"
    elif x == "T":
        new_dna += "A"
    elif x == "C":
        new_dna += "G"
    elif x == "G":
        new_dna += "C"
reverse = new_dna[::-1]
print(reverse)
